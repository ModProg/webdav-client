[package]
name = "webdav-client"
version = "0.1.0"
edition = "2024"
categories = []
description = ""
keywords = []
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/ModProg/webdav-client"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "webdav-client"
path = "src/main.rs"
required-features = ["bin"]

[lib]

[lints.rust]
# missing_docs = "warn"

[lints.clippy]
pedantic = { priority = -1, level = "warn" }
default_trait_access = "allow"
wildcard_imports = "allow"
missing_errors_doc = "allow"
items_after_statements = "allow"

[dependencies]
derive_more = { features = ["full"], git = "https://github.com/JelteF/derive_more" }
intentional = "0.1.1"
# auth
base64 = "0.22.1"
# parsing
quick-xml = { version = "0.37.2", features = ["serde", "serialize"] }
serde = { version = "1.0.217", features = ["derive"] }
crowd = { version = "0.1.0", git = "https://github.com/ModProg/crowd.git" }
# bin
anyhow = { version = "1.0.95", optional = true }
clap = { version = "4.5.32", features = ["derive", "env", "wrap_help", "unstable-markdown"], optional = true }
comfy-table = { version = "7.1.3", default-features = false, features = ["tty"], optional = true }
time = { version = "0.3.39", features = ["formatting", "parsing"], optional = true }
humansize = { version = "2.1.3", optional = true }
percent-encoding = { version = "2.3.1", optional = true }
# web clients
reqwest = { version = "0.12.12", default-features = false, optional = true }
futures-util = { version = "0.3.31", default-features = false, optional = true, features = ["alloc"] }
ureq = { version = "3.0.8", optional = true, default-features = false }
attohttpc = { version = "0.29.2", optional = true, default-features = false }
http = { version = "1.3.1", optional = true, default-features = false }
minreq = { version = "2.13.2", optional = true }

[features]
# default = ["bin", "reqwest", "reqwest-blocking", "ureq", "minreq", "attohttpc", "batteries"]
async = ["dep:futures-util"]
reqwest = ["dep:reqwest", "async"]
reqwest-blocking = ["dep:reqwest", "reqwest/blocking"]
ureq = ["dep:ureq", "dep:http"]
minreq = ["dep:minreq"]
attohttpc = ["dep:attohttpc", "dep:http"]
batteries = [
  "reqwest?/default",
  "ureq?/default",
  "minreq?/https",
  "attohttpc?/default",
]
bin = [
  "dep:anyhow",
  "dep:clap",
  "dep:comfy-table",
  "dep:time",
  "dep:humansize",
  "dep:percent-encoding",
  "reqwest-blocking",
  "reqwest/default",
]

[dev-dependencies]
# reqwest_async example
tokio = { version = "1.43.0", features = ["macros", "rt-multi-thread"] }

[[example]]
name = "minreq"
required-features = ["minreq"]

[[example]]
name = "attohttpc"
required-features = ["attohttpc"]

[[example]]
name = "reqwest_async"
required-features = ["reqwest"]

[[example]]
name = "reqwest_blocking"
required-features = ["reqwest-blocking"]

[[example]]
name = "ureq"
required-features = ["ureq"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[[package.metadata.release.pre-release-replacements]]
file = "CHANGELOG.md"
search = '## \[Unreleased\]'
replace = """
<!-- ## [Unreleased] -->
## [{{version}}] - {{date}}\
"""
[[package.metadata.release.pre-release-replacements]]
file = "CHANGELOG.md"
search = '\[unreleased\]: (.*)/(v.*)\.\.\.HEAD'
replace = """
[unreleased]: $1/{{tag_name}}...HEAD
[{{version}}]: $1/$2...{{tag_name}}\
"""
